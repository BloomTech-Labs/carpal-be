exports.up = async function (knex) {
    await knex.schema.createTable('users', tbl => {
        tbl.increments()
        tbl.string('first_name').notNullable()
        tbl.string('last_name').notNullable()
        tbl.string('email').unique().notNullable()
        tbl.boolean('is_driver').defaultTo(false)
        tbl.bigInteger('phone_number').notNullable()
        tbl.timestamp('created_at').defaultTo(knex.fn.now())
        tbl.integer('zip_code').notNullable()
        tbl.boolean('is_admin').defaultTo(false)
        tbl.boolean('is_disabled').defaultTo(false)
        tbl.text('bio')
        tbl.string('profile_picture')
    })
    await knex.schema.createTable('locations', tbl => {
        tbl.increments()
        tbl.string('name').notNullable()
        tbl.string('address').unique().notNullable()
        tbl.integer('zip_code').notNullable()
        tbl.string('city').notNullable()
        tbl.string('state').notNullable()
    })
    await knex.schema.createTable('hobbies', tbl => {
        tbl.increments()
        tbl.string('name').notNullable()
    })
    await knex.schema.createTable('audio', tbl => {
        tbl.increments()
        tbl.string('name').notNullable()
    })
    await knex.schema.createTable('users_hobbies', tbl => {
        tbl.integer('user_id').notNullable().references('id').inTable('users')
            .onUpdate('CASCADE')
            .onDelete('CASCADE')
        tbl.integer('hobby_id').notNullable().references('id').inTable('hobbies')
            .onUpdate('CASCADE')
            .onDelete('CASCADE')
        tbl.primary(['user_id', 'hobby_id'])
    })
    await knex.schema.createTable('users_audio_likes', tbl => {
        tbl.integer('user_id').notNullable().references('id').inTable('users')
            .onUpdate('CASCADE')
            .onDelete('CASCADE')
        tbl.integer('audio_id').notNullable().references('id').inTable('audio')
            .onUpdate('CASCADE')
            .onDelete('CASCADE')
        tbl.primary(['user_id', 'audio_id'])
    })
    await knex.schema.createTable('users_audio_dislikes', tbl => {
        tbl.integer('user_id').notNullable().references('id').inTable('users')
            .onUpdate('CASCADE')
            .onDelete('CASCADE')
        tbl.integer('audio_id').notNullable().references('id').inTable('audio')
            .onUpdate('CASCADE')
            .onDelete('CASCADE')
        tbl.primary(['user_id', 'audio_id'])
    })
    await knex.schema.createTable('favorite_locations', tbl => {
        tbl.integer('user_id')
            .notNullable()
            .references('id')
            .inTable('users')
            .onUpdate('CASCADE')
            .onDelete('CASCADE')
        tbl.integer('location_id').notNullable().references('id').inTable('locations')
            .onUpdate('CASCADE')
            .onDelete('CASCADE')
        tbl.primary(['user_id', 'location_id'])
    })
};
exports.down = async function (knex) {
    await knex.schema.dropTableIfExists('favorite_locations')
    await knex.schema.dropTableIfExists('users_audio_dislikes')
    await knex.schema.dropTableIfExists('users_audio_likes')
    await knex.schema.dropTableIfExists('users_hobbies')
    await knex.schema.dropTableIfExists('audio')
    await knex.schema.dropTableIfExists('hobbies')
    await knex.schema.dropTableIfExists('locations')
    await knex.schema.dropTableIfExists('users')
};